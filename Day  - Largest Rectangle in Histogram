class Solution {
public:
    vector<int>nextSmaller(vector<int>& heights){
        int size=heights.size();
        vector<int>ans(size);
        stack<int>st;
        st.push(-1);
        // right to left
        for(int i=size-1;i>=0;i--){
            while(st.top()!=-1 && heights[st.top()]>=heights[i]){
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return ans;
    }
    vector<int>prevSmaller(vector<int>& heights){
        int size=heights.size();
        vector<int>ans(size);
        stack<int>st;
        st.push(-1);
        // left to right
        for(int i=0;i<size;i++){
            while(st.top()!=-1 && heights[st.top()]>=heights[i]){
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return ans;
    }
    int largestRectangleArea(vector<int>& heights) {
        int size=heights.size();
        vector<int>next=nextSmaller(heights);
        // next k ander koi -1 nhi hona chahiye , ynha galti hoti h sbse
        for(int i=0;i<size;i++){
            if(next[i]==-1){
                next[i]=size;
            }
        }
        vector<int>prev=prevSmaller(heights);
        int maxArea=INT_MIN;
        for(int i=0;i<size;i++){
            int len=heights[i];
            int width=next[i]-prev[i]-1;
            int currArea=len*width;
            maxArea=max(maxArea,currArea);
        }
        return maxArea;
    }
};
